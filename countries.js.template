(function() {

  var iso = {};

  // global on the server, window in the browser
  var root = this,
    previous_iso = root.iso;

  if (typeof module !== 'undefined' && module.exports) {
    module.exports = iso;
  } else {
    root.iso = iso;
  }

  iso.noConflict = function() {
    root.iso = previous_iso;
    return iso;
  };

  iso.version = '0.0.1';

  iso.countries = '%%countries%%';

  iso.currencies = '%%currencies%%';

  iso.findCountryByCode = function(code) {
    for (var prop in iso.countries) {
      if (iso.countries.hasOwnProperty(prop)) {
        if (iso.countries[prop]['iso3116-1-2'] == code || iso.countries[prop]['iso3116-1-3'] == code) return iso.countries[prop];
      }
    }
  };

  iso.findCountryByNumber = function(num) {
    num = parseInt(num, 10);
    for (var prop in iso.countries) {
      if (iso.countries.hasOwnProperty(prop)) {
        if (parseInt(iso.countries[prop]['iso3116-1'], 10) == num) return iso.countries[prop];
      }
    }
  };

  iso.findCountryByName = function(name) {
    for (var prop in iso.countries) {
      if (iso.countries.hasOwnProperty(prop)) {
        if (iso.countries[prop]['name'] == name) return iso.countries[prop];
      }
    }
  };

  iso.findCountriesByCountryCodedTLD = function(code) {
    if (!code) return undefined;
    if (code.charAt(0) !== '.') code = '.' + code;

    var results = [];

    for (var prop in iso.countries) {
      if (iso.countries.hasOwnProperty(prop)) {
        if (iso.countries[prop]['tld'] == code || iso.countries[prop]['tldsecondary'] == code) {
          results.push(iso.countries[prop]);
        }
      }
    }
    if (!results.length) return undefined;
    return results;
  };


  iso.findCountriesByTLD = iso.findCountriesByCountryCodedTLD;

  iso.findCountriesByType = function(type) {
    var results = [];

    for (var prop in iso.countries) {
      if (iso.countries.hasOwnProperty(prop)) {
        if (iso.countries[prop]['type'] == type) {
          results.push(iso.countries[prop]);
        }
      }
    }
    if (!results.length) return undefined;
    return results;
  };


  iso.findCountriesByTypes = function(types) {
    if (typeof types == 'string') {
      types = [types];
    }

    var results = [];

    for (var prop in iso.countries) {
      if (iso.countries.hasOwnProperty(prop)) {
        for (var i = types.length - 1; i >= 0; i--) {
          if (types[i] == iso.countries[prop]['type']) {
            results.push(iso.countries[prop]);
          }
        }
      }
    }
    if (!results.length) return undefined;
    return results;
  };

  iso.independentStates = iso.findCountriesByType('Independent State');
  iso.states = iso.findCountriesByTypes(['Independent State','Proto Independent State']);

  iso.getSimpleCountryList = function() {
    var results = iso.states.map(function(c) {
      return {
        country: c.country,
        name: c.name
      };
    });

    return results.sort(function(a,b) {
      if (a.name < b.name)  return -1;
      if (a.name > b.name)  return 1;
      return 0;
    });
  };

  iso.findCurrency = function(currency) {
    for (var prop in iso.currencies) {
      if (iso.currencies.hasOwnProperty(prop)) {
        if (iso.currencies[prop]['currency'] == currency) return iso.currencies[prop];
      }
    }
  };

}());